<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_playerDown5</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_player5</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init variables
xvel = 0;
yvel = 0;
xfacing = "none";
yfacing = "down";
stopTimer = 0;
vertical_input = false;
horizontal_input = false;
lb = 8;
rb = 8;
tb = 8;
bb = 12;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player input

stopTimer -= 1;

var spd = 1.5;
if (stopTimer &lt;= 0) {
    // Horizontal input
    xvel = 0;    
    horizontal_input = false;
    if (keyboard_check(vk_right)) {
        xvel = spd;
        horizontal_input = true;
        xfacing = "right";
    }
    else if (keyboard_check(vk_left)) {
        xvel = -spd;
        horizontal_input = true;
        xfacing = "left";
    }
    
    
    // Vertical input
    yvel = 0;
    vertical_input = false;
    if (keyboard_check(vk_down)) {
        yvel = spd;
        vertical_input = true;
        yfacing = "down";
    } else if (keyboard_check(vk_up)) {
        yvel = -spd;
        vertical_input = true;
        yfacing = "up";
    }
    
    // Diagonal modifications
    if (vertical_input &amp;&amp; horizontal_input) {
        yvel *= 0.71;
        xvel *= 0.71;
    }
    if (vertical_input &amp;&amp; !horizontal_input) {
        xfacing = "none";
    }
    if (horizontal_input &amp;&amp; !vertical_input) {
        yfacing = "none";
    }
} else if (stopTimer &gt; 0) {
    xvel = 0;
    yvel = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update sprite index and image properties based on facing
if (xfacing == "left")
    image_xscale = -1;
else image_xscale = 1;

if (yfacing == "none") {
    if (xfacing == "left" || xfacing == "right")
        sprite_index = s_playerSide5;
} else if (xfacing == "none") {
    if (yfacing == "down")
        sprite_index = s_playerDown5;
    else if (yfacing == "up")
        sprite_index = s_playerUp5;
} else {
    if (yfacing == "down")
        sprite_index = s_playerSideDown5;
    else if (yfacing == "up")
        sprite_index = s_playerSideUp5;
}

if (horizontal_input || vertical_input) {
    image_speed = 0.1;
} else {
    image_speed = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// move and collide with solids

script_horizontalCollisions5(o_solid4);
script_horizontalCollisions5(o_npc7);
// move x position!!!
x += xvel;

script_verticalCollisions5(o_solid4);
script_verticalCollisions5(o_npc7);
// move y position!!
y += yvel;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
