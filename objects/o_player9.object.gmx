<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_playerDown5</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init variables
stopTimer = 0;
vertical_input = false;
horizontal_input = false;
xvel = 0;
yvel = 0;

mode = "rpg";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// platformer specific variables
grav = 0.5;
terminal_yvel = 4;
jump_yvel = -7;
on_ground = false;
color = "red";

plat_stand_sprite = s_redPlayerStand2;
plat_walk_sprite = s_redPlayerWalk2;
plat_jump_sprite = s_redPlayerJump9;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// rpg specific variables
xfacing = "none";
yfacing = "down";
rpg_lb = 8;
rpg_rb = 8;
rpg_tb = 8;
rpg_bb = 12;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>mode</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>"platformer"</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// player input

// Horizontal input
stopTimer -= 1;
horizontal_input = false;
xvel = 0;
if (stopTimer &lt;= 0) {
    var spd = 2;
    if (keyboard_check(vk_right)) {
        xvel = spd;
        horizontal_input = true;
        image_xscale = 1;
    }
    else if (keyboard_check(vk_left)) {
        xvel = -spd;
        horizontal_input = true;
        image_xscale = -1;
    }
    
    // jump input
    if (keyboard_check_pressed(vk_up)) {
        if (on_ground || place_meeting(x, y, o_water4)) {
            if (on_ground) {
                yvel = jump_yvel;
                audio_play_sound(snd_jump9, 1, false);
            }
            else if (place_meeting(x, y, o_water4)) {
                yvel = jump_yvel+2;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// move and collide with solids

// left collision
script_horizontalCollisions5(o_solid4);
script_horizontalCollisions5(o_npc7);
x += xvel;

// gravity
yvel += grav;
if (yvel &gt; terminal_yvel) 
    yvel = terminal_yvel;
    
// top collision
solid_obj = collision_rectangle(x-2, y-8+yvel-1, x+2, y, o_solid4, false, true);
if (solid_obj) {
    yvel = 0.5;
    y = solid_obj.y+(solid_obj.sprite_height/2)+8;
}
// bottom collision
solid_obj = collision_rectangle(x-2, y, x+2, y+8+yvel+1, o_solid4, false, true);
if (solid_obj) {
    if (!on_ground) {
        audio_play_sound(snd_land9, 1, false);
    }
    on_ground = true;
    yvel = 0;
    y = solid_obj.y-(solid_obj.sprite_height/2)-8;
} else {
    on_ground = false
}
y += yvel;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// update player sprite

// set sprite_index based on state
if (!on_ground) {
    sprite_index = plat_jump_sprite;
} else if (horizontal_input) {
    sprite_index = plat_walk_sprite;
} else {
    sprite_index = plat_stand_sprite;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>mode</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>"rpg"</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// player input
/// Player input

stopTimer -= 1;

var spd = 1.5;
if (stopTimer &lt;= 0) {
    // Horizontal input
    xvel = 0;    
    horizontal_input = false;
    if (keyboard_check(vk_right)) {
        xvel = spd;
        horizontal_input = true;
        xfacing = "right";
    }
    else if (keyboard_check(vk_left)) {
        xvel = -spd;
        horizontal_input = true;
        xfacing = "left";
    }
    
    // Vertical input
    yvel = 0;
    vertical_input = false;
    if (keyboard_check(vk_down)) {
        yvel = spd;
        vertical_input = true;
        yfacing = "down";
    } else if (keyboard_check(vk_up)) {
        yvel = -spd;
        vertical_input = true;
        yfacing = "up";
    }
    
    // Diagonal modifications
    if (vertical_input &amp;&amp; horizontal_input) {
        yvel *= 0.71;
        xvel *= 0.71;
    }
    if (vertical_input &amp;&amp; !horizontal_input) {
        xfacing = "none";
    }
    if (horizontal_input &amp;&amp; !vertical_input) {
        yfacing = "none";
    }
} else if (stopTimer &gt; 0) {
    xvel = 0;
    yvel = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// move and collide with solids

lb = rpg_lb;
tb = rpg_tb;
rb = rpg_rb;
bb = rpg_bb;

script_horizontalCollisions5(o_solid4);
script_horizontalCollisions5(o_npc7);
// move x position!!!
x += xvel;

script_verticalCollisions5(o_solid4);
script_verticalCollisions5(o_npc7);
// move y position!!
y += yvel;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// update player sprite
// Update sprite index and image properties based on facing
if (xfacing == "left")
    image_xscale = -1;
else image_xscale = 1;

if (yfacing == "none") {
    if (xfacing == "left" || xfacing == "right")
        sprite_index = s_playerSide5;
} else if (xfacing == "none") {
    if (yfacing == "down")
        sprite_index = s_playerDown5;
    else if (yfacing == "up")
        sprite_index = s_playerUp5;
} else {
    if (yfacing == "down")
        sprite_index = s_playerSideDown5;
    else if (yfacing == "up")
        sprite_index = s_playerSideUp5;
}

if (horizontal_input || vertical_input) {
    image_speed = 0.1;
} else {
    image_speed = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
